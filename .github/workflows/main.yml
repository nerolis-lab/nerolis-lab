name: CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  common:
    name: Common
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Common Dependencies
        uses: ./.github/actions/npm-install-with-cache
        with:
          working-directory: common
          cache-key-prefix: common-deps

      - name: Cache common build
        id: cache-common-build
        uses: actions/cache@v4
        with:
          path: common/dist
          key: common-build-${{ hashFiles('common/src/**', 'common/package.json', 'common/tsconfig.json', 'common/rollup.config.mjs') }}

      - name: Build Common Library
        if: steps.cache-common-build.outputs.cache-hit != 'true'
        run: |
          cd common
          npm run build || (echo "Build failed! Clearing node_modules and forcing cache refresh..." && rm -rf node_modules package-lock.json && exit 1)

      - name: Test Common Library
        run: |
          cd common
          npm run test

      - name: Upload Common Coverage
        uses: codecov/codecov-action@v4-beta
        with:
          flags: common
          directory: common
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  backend:
    name: Backend
    runs-on: ubuntu-latest
    needs: common
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Restore common build
        uses: actions/cache/restore@v4
        with:
          path: common/dist
          key: common-build-${{ hashFiles('common/src/**', 'common/package.json', 'common/tsconfig.json', 'common/rollup.config.mjs') }}
          fail-on-cache-miss: true

      - name: Install Backend Dependencies
        uses: ./.github/actions/npm-install-with-cache
        with:
          working-directory: backend
          cache-key-prefix: backend

      - name: Build and Test Backend
        run: |
          cd backend
          npm run build
          npm install -g bun
          bun install
          bun compile
          npm run test

      - name: Upload Backend Coverage
        uses: codecov/codecov-action@v4-beta
        with:
          flags: backend
          directory: backend
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    needs: common
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Restore common build
        uses: actions/cache/restore@v4
        with:
          path: common/dist
          key: common-build-${{ hashFiles('common/src/**', 'common/package.json', 'common/tsconfig.json', 'common/rollup.config.mjs') }}
          fail-on-cache-miss: true

      - name: Install Frontend Dependencies
        uses: ./.github/actions/npm-install-with-cache
        with:
          working-directory: frontend
          cache-key-prefix: frontend2

      - name: Build and Test Frontend
        run: |
          cd frontend
          npm run build || (echo "Build failed! Clearing node_modules and forcing cache refresh..." && rm -rf node_modules package-lock.json && exit 1)
          npm run test

      - name: Upload Frontend Coverage
        uses: codecov/codecov-action@v4-beta
        with:
          flags: frontend
          directory: frontend
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Documentation Dependencies
        uses: ./.github/actions/npm-install-with-cache
        with:
          working-directory: docs
          cache-key-prefix: docs

      - name: Test Documentation
        run: |
          cd docs
          npm run test

      - name: Build Documentation
        run: |
          cd docs
          npm run build

      - name: Upload Docs Coverage
        uses: codecov/codecov-action@v4-beta
        with:
          flags: docs
          directory: docs
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Root Dependencies
        uses: ./.github/actions/npm-install-with-cache
        with:
          working-directory: .
          cache-key-prefix: root

      - name: Run Lint
        run: npm run lint

      - name: Lint Commit Messages
        id: commitlint
        uses: wagoid/commitlint-github-action@v6
        continue-on-error: true

      - name: Encode commitlint results
        if: github.event_name == 'pull_request' && steps.commitlint.outputs.results != ''
        id: encode-results
        run: |
          echo "encoded=$(echo '${{ steps.commitlint.outputs.results }}' | base64 -w 0)" >> $GITHUB_OUTPUT

      - name: Comment on PR for commit message warnings
        if: github.event_name == 'pull_request' && steps.commitlint.outputs.results != ''
        uses: ./.github/actions/commitlint-comment
        with:
          results: ${{ steps.encode-results.outputs.encoded }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    needs: [common, backend, frontend, docs, lint]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Run Semantic Release
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
