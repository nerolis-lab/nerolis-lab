name: Reusable Build and Test

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: 'The working directory for the module'
      cache-key-suffix:
        required: false
        type: string
        default: ''
        description: 'Optional suffix for cache key (e.g., "2" for frontend2)'
      node-version:
        required: false
        type: string
        default: '22'
        description: 'Node.js version to use'
      needs-common-build:
        required: false
        type: boolean
        default: false
        description: 'Whether this module needs the common build'
      has-build-step:
        required: false
        type: boolean
        default: true
        description: 'Whether this module has a build step'
      has-test-step:
        required: false
        type: boolean
        default: true
        description: 'Whether this module has a test step'
      additional-setup:
        required: false
        type: string
        default: ''
        description: 'Additional setup commands to run'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Restore common build
        if: ${{ inputs.needs-common-build }}
        uses: actions/cache/restore@v4
        with:
          path: common/dist
          key: common-build-${{ hashFiles('common/src/**', 'common/package.json', 'common/tsconfig.json', 'common/rollup.config.mjs') }}
          fail-on-cache-miss: true

      - name: Install Dependencies
        uses: ./.github/actions/npm-install-with-cache
        with:
          working-directory: ${{ inputs.working-directory }}
          cache-key-prefix: ${{ inputs.working-directory }}${{ inputs.cache-key-suffix }}

      - name: Cache build output
        if: ${{ inputs.working-directory == 'common' && inputs.has-build-step }}
        id: cache-build
        uses: actions/cache@v4
        with:
          path: ${{ inputs.working-directory }}/dist
          key: ${{ inputs.working-directory }}-build-${{ hashFiles(format('{0}/src/**', inputs.working-directory), format('{0}/package.json', inputs.working-directory), format('{0}/tsconfig.json', inputs.working-directory), format('{0}/rollup.config.mjs', inputs.working-directory)) }}

      - name: Additional Setup
        if: ${{ inputs.additional-setup != '' }}
        run: ${{ inputs.additional-setup }}

      - name: Build
        if: ${{ inputs.has-build-step && (inputs.working-directory != 'common' || steps.cache-build.outputs.cache-hit != 'true') }}
        run: |
          cd ${{ inputs.working-directory }}
          npm run build || (echo "Build failed! Clearing node_modules and forcing cache refresh..." && rm -rf node_modules package-lock.json && exit 1)

      - name: Test
        if: ${{ inputs.has-test-step }}
        run: |
          cd ${{ inputs.working-directory }}
          npm run test

      - name: Upload Coverage
        if: ${{ inputs.has-test-step }}
        uses: codecov/codecov-action@v4-beta
        with:
          flags: ${{ inputs.working-directory }}
          directory: ${{ inputs.working-directory }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }} 