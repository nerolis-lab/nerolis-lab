name: Reusable Build and Test

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: 'The working directory for the module'
      commit_sha:
        description: 'Commit SHA to release'
        required: false
        type: string
      node-version:
        required: false
        type: string
        default: '22'
        description: 'Node.js version to use'
      needs-common-build:
        required: false
        type: boolean
        default: false
        description: 'Whether this module needs the common build'
      additional-setup:
        required: false
        type: string
        default: ''
        description: 'Additional setup commands to run'
      skip-tests:
        required: false
        type: boolean
        default: false
        description: 'Skip running tests'

jobs:
  check-for-artifact:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.set-output.outputs.exists }}
    steps:
      - name: Check for existing artifact
        id: check
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.working-directory }}-${{ inputs.commit_sha || github.sha }}

      - name: Set output
        id: set-output
        run: echo "exists=${{ steps.check.outcome == 'success' }}" >> $GITHUB_OUTPUT

  build-and-test:
    needs: check-for-artifact
    if: needs.check-for-artifact.outputs.exists != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit_sha || github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Restore common build
        if: ${{ inputs.needs-common-build }}
        uses: actions/cache/restore@v4
        with:
          path: common/dist
          key: common-build-${{ hashFiles('common/src/**', 'common/package.json', 'common/tsconfig.json', 'common/rollup.config.mjs') }}
          fail-on-cache-miss: true

      - name: Install Dependencies
        uses: ./.github/actions/npm-install-with-cache
        with:
          working-directory: ${{ inputs.working-directory }}
          cache-key-prefix: ${{ inputs.working-directory }}

      - name: Cache build output
        if: ${{ inputs.working-directory == 'common' }}
        id: cache-build
        uses: actions/cache@v4
        with:
          path: ${{ inputs.working-directory }}/dist
          key: common-build-${{ hashFiles('common/src/**', 'common/package.json', 'common/tsconfig.json', 'common/rollup.config.mjs') }}

      - name: Additional Setup
        if: ${{ inputs.additional-setup != '' }}
        run: ${{ inputs.additional-setup }}

      - name: Build
        if: ${{ (inputs.working-directory != 'common' || steps.cache-build.outputs.cache-hit != 'true') }}
        env:
          VITE_GOOGLE_CLIENT_ID: ${{ inputs.working-directory == 'frontend' && vars.VITE_GOOGLE_CLIENT_ID || '' }}
          VITE_DISCORD_CLIENT_ID: ${{ inputs.working-directory == 'frontend' && vars.VITE_DISCORD_CLIENT_ID || '' }}
          VITE_PATREON_CLIENT_ID: ${{ inputs.working-directory == 'frontend' && vars.VITE_PATREON_CLIENT_ID || '' }}
        run: |
          cd ${{ inputs.working-directory }}
          npm run build || (echo "Build failed! Clearing node_modules and forcing cache refresh..." && rm -rf node_modules package-lock.json && exit 1)

      - name: Test
        if: ${{ !inputs.skip-tests }}
        run: |
          cd ${{ inputs.working-directory }}
          npm run test

      - name: Upload Coverage
        if: ${{ !inputs.skip-tests }}
        uses: codecov/codecov-action@v4-beta
        with:
          flags: ${{ inputs.working-directory }}
          directory: ${{ inputs.working-directory }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload build artifacts
        if: ${{ (inputs.working-directory == 'frontend' || inputs.working-directory == 'backend' || inputs.working-directory == 'common' || inputs.working-directory == 'docs') }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.working-directory }}-${{ inputs.commit_sha || github.sha }}
          path: |
            ${{ inputs.working-directory == 'docs' && 'docs/.vitepress/dist/' || format('{0}/dist/', inputs.working-directory) }}
            ${{ (inputs.working-directory == 'backend' || inputs.working-directory == 'common') && format('{0}/package.json', inputs.working-directory) || '' }}
            ${{ (inputs.working-directory == 'backend' || inputs.working-directory == 'common') && format('{0}/package-lock.json', inputs.working-directory) || '' }}
          retention-days: 7
