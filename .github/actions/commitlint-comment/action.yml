name: 'Commitlint PR Comment'
description: 'Add or update PR comments based on commitlint results'
inputs:
  results:
    description: 'JSON results from commitlint'
    required: true
  github-token:
    description: 'GitHub token for API access'
    required: true

runs:
  using: "composite"
  steps:
    - name: Comment on PR for commit message warnings
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const results = JSON.parse('${{ inputs.results }}');
          
          // Check if there are any warnings
          const hasWarnings = results.some(result => result.warnings && result.warnings.length > 0);
          
          // Check if we already commented
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });

          const existingComment = comments.find(comment => 
            comment.user.login === 'github-actions[bot]' && 
            (comment.body.includes('Commit Message Warnings') || comment.body.includes('Commit Messages Look Good'))
          );
          
          if (hasWarnings) {
            let warningMessage = '## ‚ö†Ô∏è Commit Message Warnings\n\n';
            warningMessage += 'Your commit messages have some formatting warnings. While these won\'t block the PR, consider fixing them for better consistency:\n\n';
            
            results.forEach(result => {
              if (result.warnings && result.warnings.length > 0) {
                warningMessage += `### \`${result.hash.substring(0, 7)}\`: ${result.message.split('\n')[0]}\n`;
                result.warnings.forEach(warning => {
                  warningMessage += `- ‚ö†Ô∏è ${warning}\n`;
                });
                warningMessage += '\n';
              }
            });
            
            warningMessage += 'üí° **Tip**: For sentence-case warnings, use lowercase for the first word after the colon (e.g., `feat: add feature` instead of `feat: Add feature`).\n\n';
            warningMessage += '‚ÑπÔ∏è [Learn more about conventional commits](https://www.conventionalcommits.org/)\n\n';
            warningMessage += '<sub>This comment is automatically generated by commitlint.</sub>';

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: warningMessage
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: warningMessage
              });
            }
          } else if (existingComment) {
            // No warnings found, but there was a previous comment - update it to show resolution
            let resolvedMessage = '## ‚úÖ Commit Messages Look Good!\n\n';
            resolvedMessage += 'All commit message warnings have been resolved. Thanks for following the conventional commit format!\n\n';
            resolvedMessage += '‚ÑπÔ∏è [Learn more about conventional commits](https://www.conventionalcommits.org/)\n\n';
            resolvedMessage += '<sub>This comment is automatically generated by commitlint.</sub>';

            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existingComment.id,
              body: resolvedMessage
            });
          } 